#name: Publish to PyPI using uv
#
#on:
#  release:
#    types: [published]
#
#permissions:
#  contents: read
#  id-token: write  # PyPI trusted publishing requires this
#
#jobs:
#  uv-publish:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Install uv
#        uses: astral-sh/setup-uv@v5
#
##      - name: Install uv
##        run: pipx install uv
#
#      - name: Publish to PyPI with uv
#        # uvx --from=toml-cli toml set --toml-path=pyproject.toml project.version $CI_COMMIT_TAG
#        # uv publish dist/*.whl
#        run: |
#          uv build
#          uv publish
#
        


name: Publish to PyPI using uv

on:
  push:
    tags:
      - '*'  # 모든 태그 push 시 작동

permissions:
  contents: read  # 역할 뭐지?
  id-token: write
  attestations: write

jobs:
  uv-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: build pkg
        run: |
          uv build

      # Generate hashes used for provenance.
      - name: generate hash
        id: hash
        run: cd dist && echo "hash=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-path: "dist/*"


#      - name: Download all the dists
#        uses: actions/download-artifact@v4
#        with:
#          name: python-package-distributions
#          path: dist/


      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
          release-signing-artifacts: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"

  create-release:
    # Upload the sdist, wheels, and provenance to a GitHub release. They remain
    # available as build artifacts for a while as well.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: ${{ needs.build.outputs.hash }}
    permissions:
      contents: write
      id-token: write

  publish-release:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        run: |
          gh release create --draft --repo ${{ github.repository }} \
            ${{ github.ref_name }} dist/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI with uv
        run: |
          uv publish
